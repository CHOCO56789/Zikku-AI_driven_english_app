import { supabase } from '@/libs/supabase'
import { Article, ImageMetadata } from '@/types/articles'

// APIレスポンスをArticle型に変換する関数
function transformToArticle(rawData: any): Article {
  const metadata = rawData.metadata || {};
  const images: ImageMetadata[] = metadata.images || [];
  
  return {
    id: rawData.article_id,
    title: rawData.base_title,
    description: rawData.base_text?.substring(0, 100) + "...",
    imageUrl: images[0]?.url || "/images/image.png",
    author: metadata.authors?.[0] || "generated by Pattto",
    createdAt: rawData.created_at,
    content: rawData.base_text,
    metadata: {
      images: images.map(img => ({
        url: img.url,
        alt: img.alt,
        type: img.type,
        credit: img.credit,
        caption: img.caption
      })),
      authors: metadata.authors || []
    }
  };
}

export async function getArticle(id: string): Promise<Article | null> {
  try {
    const { data, error } = await supabase
      .from('articles')
      .select('*')
      .eq('article_id', id)
      .eq('status', 'publish')
      .single();

    if (error) {
      console.error('Supabase error:', error);
      return null;
    }

    if (!data) {
      return null;
    }

    return transformToArticle(data);
  } catch (error) {
    console.error('Error fetching article:', error);
    return null;
  }
} 